//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="SimpleSoap", Namespace="http://msu/")]
public partial class Simple : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback AddOperationCompleted;
    
    private System.Threading.SendOrPostCallback ConcatOperationCompleted;
    
    private System.Threading.SendOrPostCallback SumOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddsOperationCompleted;
    
    /// <remarks/>
    public Simple() {
        this.Url = "http://localhost:53938/Code/Simple.asmx";
    }
    
    /// <remarks/>
    public event AddCompletedEventHandler AddCompleted;
    
    /// <remarks/>
    public event ConcatCompletedEventHandler ConcatCompleted;
    
    /// <remarks/>
    public event SumCompletedEventHandler SumCompleted;
    
    /// <remarks/>
    public event AddsCompletedEventHandler AddsCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://msu/sum_1", RequestElementName="sum_1", RequestNamespace="http://msu/", ResponseElementName="sum_1Response", ResponseNamespace="http://msu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("sum_1Result")]
    public int Add(int x, int y) {
        object[] results = this.Invoke("Add", new object[] {
                    x,
                    y});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAdd(int x, int y, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Add", new object[] {
                    x,
                    y}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndAdd(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void AddAsync(int x, int y) {
        this.AddAsync(x, y, null);
    }
    
    /// <remarks/>
    public void AddAsync(int x, int y, object userState) {
        if ((this.AddOperationCompleted == null)) {
            this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
        }
        this.InvokeAsync("Add", new object[] {
                    x,
                    y}, this.AddOperationCompleted, userState);
    }
    
    private void OnAddOperationCompleted(object arg) {
        if ((this.AddCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://msu/sum_2", RequestElementName="sum_2", RequestNamespace="http://msu/", ResponseElementName="sum_2Response", ResponseNamespace="http://msu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("sum_2Result")]
    public string Concat(string s, double d) {
        object[] results = this.Invoke("Concat", new object[] {
                    s,
                    d});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginConcat(string s, double d, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Concat", new object[] {
                    s,
                    d}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndConcat(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ConcatAsync(string s, double d) {
        this.ConcatAsync(s, d, null);
    }
    
    /// <remarks/>
    public void ConcatAsync(string s, double d, object userState) {
        if ((this.ConcatOperationCompleted == null)) {
            this.ConcatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConcatOperationCompleted);
        }
        this.InvokeAsync("Concat", new object[] {
                    s,
                    d}, this.ConcatOperationCompleted, userState);
    }
    
    private void OnConcatOperationCompleted(object arg) {
        if ((this.ConcatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ConcatCompleted(this, new ConcatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://msu/sum_3", RequestElementName="sum_3", RequestNamespace="http://msu/", ResponseElementName="sum_3Response", ResponseNamespace="http://msu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("sum_3Result")]
    public MSU Sum(MSU msu1, MSU msu2) {
        object[] results = this.Invoke("Sum", new object[] {
                    msu1,
                    msu2});
        return ((MSU)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSum(MSU msu1, MSU msu2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Sum", new object[] {
                    msu1,
                    msu2}, callback, asyncState);
    }
    
    /// <remarks/>
    public MSU EndSum(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MSU)(results[0]));
    }
    
    /// <remarks/>
    public void SumAsync(MSU msu1, MSU msu2) {
        this.SumAsync(msu1, msu2, null);
    }
    
    /// <remarks/>
    public void SumAsync(MSU msu1, MSU msu2, object userState) {
        if ((this.SumOperationCompleted == null)) {
            this.SumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSumOperationCompleted);
        }
        this.InvokeAsync("Sum", new object[] {
                    msu1,
                    msu2}, this.SumOperationCompleted, userState);
    }
    
    private void OnSumOperationCompleted(object arg) {
        if ((this.SumCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SumCompleted(this, new SumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://msu/sum_4", RequestElementName="sum_4", RequestNamespace="http://msu/", ResponseElementName="sum_4Response", ResponseNamespace="http://msu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("sum_4Result")]
    public string Adds(int x, int y) {
        object[] results = this.Invoke("Adds", new object[] {
                    x,
                    y});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAdds(int x, int y, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Adds", new object[] {
                    x,
                    y}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndAdds(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void AddsAsync(int x, int y) {
        this.AddsAsync(x, y, null);
    }
    
    /// <remarks/>
    public void AddsAsync(int x, int y, object userState) {
        if ((this.AddsOperationCompleted == null)) {
            this.AddsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddsOperationCompleted);
        }
        this.InvokeAsync("Adds", new object[] {
                    x,
                    y}, this.AddsOperationCompleted, userState);
    }
    
    private void OnAddsOperationCompleted(object arg) {
        if ((this.AddsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddsCompleted(this, new AddsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://msu/")]
public partial class MSU {
    
    private string sField;
    
    private int kField;
    
    private float fField;
    
    /// <remarks/>
    public string s {
        get {
            return this.sField;
        }
        set {
            this.sField = value;
        }
    }
    
    /// <remarks/>
    public int k {
        get {
            return this.kField;
        }
        set {
            this.kField = value;
        }
    }
    
    /// <remarks/>
    public float f {
        get {
            return this.fField;
        }
        set {
            this.fField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ConcatCompletedEventHandler(object sender, ConcatCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConcatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ConcatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void SumCompletedEventHandler(object sender, SumCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MSU Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MSU)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void AddsCompletedEventHandler(object sender, AddsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
